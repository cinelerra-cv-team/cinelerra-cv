# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on Ubuntu

on: [workflow_dispatch]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install deps
      run: |
          sudo apt update
          sudo apt install -y git make g++ cmake pkg-config intltool autoconf automake libtool gettext
          sudo apt install -y nasm x264 openexr mjpegtools a52dec faac libfaad-dev fftw-dev lame libavc1394-dev
          sudo apt install -y libiec61883-dev libraw1394-dev libsndfile-dev libvorbis-dev libogg-dev libpng-dev libjpeg-dev libtiff-dev
          sudo apt install -y libfreetype-dev libasound2-dev ladspa-sdk libx11-dev
          sudo apt install -y libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxrender-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
#      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      run: |
            ./autogen.sh
            ./configure

    - name: Build
      # Build your program with the given configuration
      run: make

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
